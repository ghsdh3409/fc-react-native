# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  before_all do
    app_store_connect_api_key(
      key_id: "F5563U2X9X",
      issuer_id: "61afe6ea-49f1-4468-b65d-704d54a07e66",
      # key_content: ENV["APP_STORE_CONNECT_API_KEY_CONTENT"],
      key_filepath: "./fastlane/key/AuthKey_F5563U2X9X.p8",
      duration: 1200, # optional (maximum 1200)
      in_house: false, # optional but may be required if using match/sigh // Is App Store or Enterprise (in house) team? App Store Connect API cannot determine this on its own (yet)
    )
  end

  desc "Send result to slack"
  lane :send_result do
    version = get_version_number
    build = get_build_number
    js_version = sh("yarn run get-version-number-js").split("\n")[2]
    slack(
      message: "앱이 배포되었습니다.",
      slack_url: ENV["SLACK_URL"],
      payload: {
        "iOS version" => version + "(" + build + ")",
        "JS version" => js_version
      }
    )
  end

  desc "Push a new release build to the App Store"
  lane :release do
    match(type: "appstore", git_url: "https://github.com/ghsdh3409/moviereminder-cert.git")
    build_app(workspace: "MovieReminder.xcworkspace", scheme: "MovieReminder", configuration: "Release")
    upload_to_app_store(
      submit_for_review: false,
      overwrite_screenshots: true,
      force: true,
      precheck_include_in_app_purchases: false,
    )
    send_result
  end
end
